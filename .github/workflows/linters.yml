---
name: Linters pipeline

"on":
  push:
    branches: [main]
  pull_request:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  markdown-link-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: tcort/github-action-markdown-link-check@v1

  markdown-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: DavidAnson/markdownlint-cli2-action@v20
        with:
          globs: '**/*.md'

  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-backend-${{ hashFiles('backend/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-buildx-backend-
      - name: Copy Docker Compose override file
        run: cp docker/docker-compose.override.yml.example docker/docker-compose.override.yml
      - name: Run backend linting
        run: make back-lint
      - name: Run backend tests
        run: make back-test

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-frontend-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-buildx-frontend-
      - name: Copy Docker Compose override file
        run: cp docker/docker-compose.override.yml.example docker/docker-compose.override.yml
      - name: Run frontend linting
        run: make front-lint
      - name: Run frontend tests
        run: make front-test
      - name: Run Svelte type checking
        run: make front-svelte-check
