---
name: Linters pipeline

"on":
  push:
    branches: [main]
  pull_request:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: '3.12'
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('backend/pyproject.toml') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-
      - name: Install backend dependencies
        run: |
          cd backend
          uv pip install --system .
      - name: Run backend linting
        run: make back-lint

  backend-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: '3.12'
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      - name: Install system dependencies for pyvips
        run: |
          sudo apt-get update
          sudo apt-get install -y libvips-dev
      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('backend/pyproject.toml') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-
      - name: Install backend dependencies
        run: |
          cd backend
          uv pip install --system .
      - name: Run backend tests
        run: make back-test

  frontend-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'
      - name: Install frontend dependencies
        run: make front-ci-install
      - name: Run frontend linting
        run: make front-lint-only

  frontend-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'
      - name: Install frontend dependencies
        run: make front-ci-install
      - name: Run frontend tests
        run: make front-test
