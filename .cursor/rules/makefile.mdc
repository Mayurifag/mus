---
description:
globs:
alwaysApply: true
---
# Makefile Standards

<rule>
name: makefile_best_practices
description: Core Makefile standards and guidelines for the project
filters:
  - type: file_name
    pattern: "Makefile|.*\\.mk$"
  - type: content
    pattern: "(?s).*"

actions:
  - type: suggest
    message: |
      Follow these Makefile standards:

      1. Target Definition:
         - Use .PHONY for ALL non-file targets
         - Standard target names:
           * deps: Install dependencies
           * sync: Sync dependencies
           * lock: Update lock files
           * lint: Run linters
           * format: Run formatters
           * test: Run tests
           * clean: Clean build artifacts
           * build: Build the project
           * run-dev: Run development server
         - Group related targets in separate .mk files

      2. Variable Usage:
         - Use UPPER_CASE for Make variables
         - Use ?= for default values:
           ```makefile
           PYTHON ?= python3
           COVERAGE ?= 80
           ```
         - Define variables at the top
         - Use := for immediate expansion
         - Use += for appending values

      3. Recipe Simplicity:
         - Keep recipes concise
         - Prefer Make functions over shell:
           * Use $(wildcard) instead of shell find
           * Use $(patsubst) instead of shell sed
           * Use $(filter) instead of shell grep
         - One command per line
         - Use @ to suppress command echo

      4. Argument Handling:
         - Support direct argument passing:
           ```makefile
           .PHONY: uv-install
           uv-install:
               uv pip install $(ARGS)
           ```
         - Use target-specific variables
         - Document required arguments

      5. Dependencies:
         - Use uv for Python packages
         - Keep requirements.txt as lock
         - Document all changes
         - Test after updates
         - Support virtual environments

metadata:
  priority: high
  version: 1.0
</rule>
