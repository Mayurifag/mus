---
description: Best practices for writing Dockerfiles, focusing on multi-stage builds, layer caching, security, and minimal image size.
globs: ["*Dockerfile", "Dockerfile*"]
alwaysApply: false
---
# Dockerfile Standards

<rule>
name: dockerfile_best_practices
description: Guidelines for creating efficient, secure, and maintainable Dockerfiles.
filters:
  - type: file_name # More specific than file_extension for Dockerfiles
    pattern: "(Dockerfile|.*\\.Dockerfile|Dockerfile\\..*)"
  - type: content
    pattern: "(?s).*"

actions:
  - type: suggest
    message: |
      Follow these Dockerfile best practices:
        - Use official and specific base images (e.g., `python:3.12-slim-bookworm`, `node:20-alpine`). Avoid `latest` tags for production.
        - Choose slim or alpine variants where appropriate to reduce image size, balancing size with ease of use/debugging.
        - Combine related `RUN` commands using `&&` to reduce layers. Example:
          ```Dockerfile
          RUN apt-get update \
              && apt-get install -y --no-install-recommends \
                  # Sort packages alphabetically
                  package1 \
                  package2 \
              && rm -rf /var/lib/apt/lists/*
