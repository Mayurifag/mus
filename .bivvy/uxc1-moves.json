{
  "Climb": "uxc1",
  "moves": [
    {
      "status": "complete",
      "description": "Update core CSS custom properties for the new dark theme color palette.",
      "details": "Modify frontend/src/app.css. Change --background to '0 0% 12%'. Change --muted to '0 0% 20%'. Change --secondary to '0 0% 8%'. Change --card to '0 0% 10%'. Change --popover to '0 0% 10%'. These values are HSL components for use with `hsl(var(--variable))`. This is a foundational change; verify visual impact across the application, especially on the main background, tracklist background, player footer, and element hovers/borders/inputs that use these variables.",
      "rules_filepaths_to_follow": "`.cursor/rules/css.mdc`",
      "filepaths_to_modify": "`frontend/src/app.css`",
      "rest": "true"
    },
    {
      "status": "todo",
      "description": "Update TrackItem.svelte to use the new selected background color and make its progress slider thumb always visible.",
      "details": "In frontend/src/lib/components/domain/TrackItem.svelte: 1. Modify the conditional class for the main div of the track item. When 'isSelected' is true, it should now use 'bg-secondary' instead of 'bg-muted'. Example: `class=\"... {isSelected ? 'bg-secondary' : ''}\"`. 2. Adjust the CSS within the `<style>` tags to ensure the slider thumb (`[data-melt-slider-thumb]`) is always visible (e.g., `opacity: 1`) when the track item is selected. This might involve removing or overriding existing opacity rules for the thumb that make it appear only on hover for selected items. Ensure tests in frontend/src/lib/components/domain/TrackItem.svelte.test.ts are updated to reflect these changes, verifying the new class for selected items and the visibility of the slider thumb.",
      "rules_filepaths_to_follow": "`.cursor/rules/svelte.mdc,.cursor/rules/css.mdc`",
      "filepaths_to_modify": "`frontend/src/lib/components/domain/TrackItem.svelte,frontend/src/lib/components/domain/TrackItem.svelte.test.ts`",
      "rest": "true"
    },
    {
      "status": "todo",
      "description": "Fix shuffle and repeat button active styling in PlayerFooter.svelte.",
      "details": "In frontend/src/lib/components/layout/PlayerFooter.svelte: 1. For the Shuffle icon: `<Shuffle class=\"h-5 w-5\" color={$trackStore.is_shuffle ? 'hsl(var(--accent))' : 'currentColor'} />`. 2. For the Repeat icon: If `audioService?.isRepeat` is true, use `<Repeat1 class=\"h-5 w-5\" color=\"hsl(var(--accent))\" />`. Otherwise, use `<Repeat class=\"h-5 w-5\" color=\"currentColor\" />`. 3. Add a subtle background highlight to the Shuffle and Repeat buttons when they are active. For example, apply `class:bg-accent/10={$trackStore.is_shuffle}` to the Shuffle button, and `class:bg-accent/10={audioService?.isRepeat}` to the Repeat button. Update tests in frontend/src/lib/components/layout/PlayerFooter.svelte.test.ts to verify these active state changes (icon color and background highlight).",
      "rules_filepaths_to_follow": "`.cursor/rules/svelte.mdc`",
      "filepaths_to_modify": "`frontend/src/lib/components/layout/PlayerFooter.svelte,frontend/src/lib/components/layout/PlayerFooter.svelte.test.ts`",
      "rest": "true"
    },
    {
      "status": "todo",
      "description": "Update ROADMAP.md to mark the color theme task as addressed.",
      "details": "In ROADMAP.md, locate the line: `- [ ] Recolor all frontend. Switched on repeat/reshuffle buttons should be blue (check)`. Change it to: `- [x] Recolor all frontend. Switched on repeat/reshuffle buttons should be blue (check)`. Also ensure any sub-points related to color changes and button fixes are marked if completed by the previous moves.",
      "rules_filepaths_to_follow": "`.cursor/rules/md.mdc`",
      "filepaths_to_modify": "`ROADMAP.md`",
      "rest": "false"
    }
  ]
}
