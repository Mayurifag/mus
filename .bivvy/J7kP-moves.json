{
  "Climb": "J7kP",
  "moves": [
    {
      "status": "complete",
      "description": "Implement playback position restoration for the current track.",
      "details": "Modify frontend stores (`playerStore.ts`, `trackStore.ts`) and `(app)/+layout.svelte` to ensure that when the application loads and restores player state, the `progress_seconds` of the current track is correctly applied, and the player is paused at this restored time. Update `playerStore.setTrack` to accept an `initialTime` parameter. Update `trackStore.setCurrentTrackIndex` to pass this `initialTime`. In `(app)/+layout.svelte`, use the loaded `progress_seconds` as `initialTime` during state restoration and ensure `playerStore.pause()` is called. Update related unit tests for stores and layout state restoration.",
      "rules_filepaths_to_follow": "`.cursor/rules/svelte.mdc,.cursor/rules/typescript.mdc`",
      "filepaths_to_modify": "`frontend/src/lib/stores/playerStore.ts`,`frontend/src/lib/stores/trackStore.ts`,`frontend/src/routes/(app)/+layout.svelte`,`frontend/src/lib/stores/playerStore.test.ts`,`frontend/src/lib/stores/trackStore.test.ts`,`frontend/src/routes/(app)/__tests__/layout.test.ts`",
      "rest": "true"
    },
    {
      "status": "complete",
      "description": "Fix scroll positioning for the current track.",
      "details": "Modify `frontend/src/lib/components/domain/TrackList.svelte` to ensure the currently playing track is automatically scrolled to the center of the viewport without animation. Change the `scrollIntoView` options to `{ behavior: 'auto', block: 'center' }`. Remove the existing `setTimeout` and use Svelte's `tick()` function to await DOM updates before scrolling. Update related unit tests for `TrackList.svelte`.",
      "rules_filepaths_to_follow": "`.cursor/rules/svelte.mdc,.cursor/rules/typescript.mdc`",
      "filepaths_to_modify": "`frontend/src/lib/components/domain/TrackList.svelte`,`frontend/src/lib/components/domain/TrackList.svelte.test.ts`",
      "rest": "true"
    },
    {
      "status": "todo",
      "description": "Run CI checks to ensure all tests and linters pass.",
      "details": "Execute `make ci` from the project root directory. Verify that all checks, including linting, formatting, and all unit tests for both frontend and backend, pass without any errors or warnings. Address any issues reported by the CI pipeline.",
      "rules_filepaths_to_follow": "`.cursor/rules/makefile.mdc`",
      "filepaths_to_modify": "",
      "rest": "true"
    }
  ]
}
